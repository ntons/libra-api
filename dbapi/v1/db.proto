syntax = "proto3";

package libra.dbapi.v1;

option go_package = "github.com/ntons/libra-go/api/dbapi/v1;dbapi_v1";

import "dbapi/v1/archive.proto";
import "google/protobuf/descriptor.proto";

service DB {
    rpc RegisterSchema(RegisterSchemaRequest) returns (RegisterSchemaResponse) {}
    // lock/unlock archive mutex
    rpc Lock   (ArchiveGetRequest) returns (ArchiveGetResponse);
    rpc Unlock (ArchiveSetRequest) returns (ArchiveSetResponse);
    // get/set whole archive
    rpc GetArchive (ArchiveGetRequest) returns (ArchiveGetResponse);
    rpc SetArchive (ArchiveSetRequest) returns (ArchiveSetResponse);
    // get/set archive model
    rpc GetModel (ArchiveGetRequest) returns (ArchiveGetResponse);
    rpc SetModel (ArchiveSetRequest) returns (ArchiveSetResponse);
    // get/set archive metadata
    rpc GetMetadata (ArchiveGetRequest) returns (ArchiveGetResponse);
    rpc SetMetadata (ArchiveSetRequest) returns (ArchiveSetResponse);
}

message RegisterSchemaRequest {
    // proto file descriptor set
    google.protobuf.FileDescriptorSet descriptor_set = 1;
    // proto message name
    string message_name = 2;
}
message RegisterSchemaResponse {
    // unique identifier for registered proto
    string schema = 1;
}

// All methods work around archive, so that all request and response could be the same
message ArchiveGetRequest {
    string  id = 1;
    Archive add_if_not_found = 2;
    //string  token = 10;
    bool    with_lock = 11;
}
message ArchiveGetResponse {
    Archive archive = 1;
    string  token = 10;
}
message ArchiveSetRequest {
    Archive archive = 1;
    string  token = 10;
    bool    with_unlock = 11;
}
message ArchiveSetResponse {
    Archive archive = 1;
}
