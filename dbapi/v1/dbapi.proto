syntax = "proto3";

option go_package = ".;dbapi";

import "google/protobuf/descriptor.proto";

package dbapi;

service DBV1 {
    rpc RegisterSchema(RegisterSchemaRequest) returns (RegisterSchemaResponse) {}

    rpc Get(GetRequest)             returns(GetResponse);
    rpc LockGet(LockGetRequest)     returns(LockGetResponse);
    rpc SetUnlock(SetUnlockRequest) returns(SetUnlockResponse);
    rpc Unlock(UnlockRequest)       returns(UnlockResponse);
}

message RegisterSchemaRequest {
    // proto file descriptor set
    google.protobuf.FileDescriptorSet descriptor_set = 1;
    // proto message name
    string message_name = 2;
}
message RegisterSchemaResponse {
    // unique identifier for registered proto
    string schema = 1;
}

message Data {
    string key   = 1;
    // got value could be 0-len, means new created
    // set value should not be 0-len which means don't update(unlock only)
    bytes  value = 2;
    string token = 3;
}

message GetRequest {
    repeated string keys = 2;
}
message GetResponse {
    repeated Data data = 1; // token will be omitted
}

enum Mode {
    Mode0  = 0; // lock/create the key not matter exist or not
    ModeXX = 1; // Only lock the key if it already exist.
}

message LockGetRequest {
    Mode mode = 1;
    repeated string keys = 2;
}
message LockGetResponse {
    repeated Data data = 1;
}

message SetUnlockRequest {
    repeated Data data = 1;
}
message SetUnlockResponse {
}

message UnlockRequest {
    repeated Data data = 1;
}
message UnlockResponse {
}
