// portal account service
// 1. Login to the user supplier, then an account login state can be got.
// 2. Login pt with account state, a token will be returned for identifing user.
// 3. List roles and select or create one to sign in, a ticket will be returned.
// 4. Communicate with libra grpc servers with above ticket
syntax = "proto3";

package libra.ptapi.v1;

option go_package = ".;libra_ptapi_v1";

import "google/api/annotations.proto";
import "google/protobuf/any.proto";

// An instance of user is mapped from tuple(app, acct_src, acct_id).
message User {
    // primary key
    string id       = 1;
    // union key
    string app_id   = 2;
    string acct_src = 3;
    string acct_id  = 4;
    // custom key-value metadata
    map<string, string> metadata = 15;
}

// Instances of role are mapped from tuple(app, user)
// Multiple roles could be created in one app by the same user
message Role {
    // primary key
    string id       = 1;
    // union key
    string app_id   = 2;
    string user_id  = 3;
    // custom key-value metadata
    map<string, string> metadata = 15;
}

service Account {
    rpc Login (LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/ptapi/v1/account/user"
            body: "*"
            additional_bindings {
                post: "/ptapi/v1/account/login"
                body: "*"
            }
        };
    }

    rpc ListRoles (ListRolesRequest) returns (ListRolesResponse) {
        option (google.api.http) = {
            get:  "/ptapi/v1/account/role"
            additional_bindings {
                get: "/ptapi/v1/account/listroles"
            }
        };
    }

    rpc CreateRole (CreateRoleRequest) returns (CreateRoleResponse) {
        option (google.api.http) = {
            put:  "/ptapi/v1/account/role"
            body: "*"
            additional_bindings {
                post: "/ptapi/v1/account/createrole"
                body: "*"
            }
        };
    }

    rpc SignIn (SignInRequest) returns (SignInResponse) {
        option (google.api.http) = {
            post: "/ptapi/v1/account/role"
            body: "*"
            additional_bindings {
                post: "/ptapi/v1/account/signin"
                body: "*"
            }
        };
    }

    rpc SetUserMetadata (SetUserMetadataRequest) returns (SetUserMetadataResponse) {
        option (google.api.http) = {
            post: "/ptapi/v1/account/user/metadata"
            body: "*"
            additional_bindings {
                post: "/ptapi/v1/account/setusermetadata"
                body: "*"
            }
        };
    }

    rpc SetRoleMetadata (SetRoleMetadataRequest) returns (SetRoleMetadataResponse) {
        option (google.api.http) = {
            post: "/ptapi/v1/account/role/metadata"
            body: "*"
            additional_bindings {
                post: "/ptapi/v1/account/setrolemetadata"
                body: "*"
            }
        };
    }
}

message LoginRequest {
    string sign     = 1;
    string nonce    = 2;
    string app_id   = 3;
    //string acct_src = 4;
    google.protobuf.Any state = 5;
}
message LoginResponse {
    // Token will be set to cookie "x-libra-token" as well.
    // A token field should be set to request if cookie is not supported.
    // Both cookie and field are set, cookie is preferred.
    string  token   = 1;
    User    user    = 2;
}


message ListRolesRequest {
    string  sign    = 1;
    string  nonce   = 2;
    string  app_id  = 3;
    string  token   = 4;
}
message ListRolesResponse {
    repeated Role roles = 1;
}

message CreateRoleRequest {
    string  sign    = 1;
    string  nonce   = 2;
    string  app_id  = 3;
    string  token   = 4;
    int32   index   = 5; // role index to prevent duplicate creation
}
message CreateRoleResponse {
    Role role = 1;
}

message SignInRequest {
    string sign     = 1;
    string nonce    = 2;
    string app_id   = 3;
    string token    = 4;
    string role_id  = 5;
}
message SignInResponse {
    string ticket = 1;
    Role   role   = 2;
}

message SetUserMetadataRequest {
    string sign     = 1;
    string nonce    = 2;
    string app_id   = 3;
    string token    = 4;
    map<string, string> metadata = 5;
}
message SetUserMetadataResponse {
}

message SetRoleMetadataRequest {
    string  sign    = 1;
    string  nonce   = 2;
    string  app_id  = 3;
    string  token   = 4;
    string  role_id = 5;
    map<string, string> metadata = 6;
}
message SetRoleMetadataResponse {
}
