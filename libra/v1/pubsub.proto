syntax = "proto3";

package libra.v1;

option go_package = "github.com/ntons/libra-go/api/libra/v1";

import "google/protobuf/any.proto";

// 发布/订阅服务
service PubSubService {
    // 发布
    rpc Publish (PubSub.PublishRequest) returns (PubSub.PublishResponse);
    // 订阅
    rpc Subscribe (PubSub.SubscribeRequest) returns (stream PubSub.SubscribeResponse);
}

message PubSub {
    message Message {
        // 主题
        string topic = 1;
        // 消息ID，发送时候不需要填，收取的时候会自动填充
        string id = 2;
        // 生产者
        string producer = 3;
        // 生产时间
        int64 produce_at = 4;
        // 消息载荷
        oneof value {
            bytes bin = 11;
            string str = 12;
            google.protobuf.Any any = 13;
        }
    }

    message Options {
        bool create_topic = 1; // 自动创建主题
        int64 max_len = 2; // 主题保存的消息数量
        string min_id = 3; // 主题保存的最小ID
    }

    message PublishRequest {
        repeated Message msgs = 1;
        Options opts = 2;
    }
    message PublishResponse {
    }

    message SubscribeRequest {
        // 订阅起始点，要满足所有条件
        message Start {
            // 指定ID之后(不包含指定ID)
            string after_id = 1;
            // 指定毫秒时间戳开始
            int64 since_timestamp_millis = 2;
        }
        map<string, Start> topic_start = 1;
    }
    message SubscribeResponse {
        repeated Message msgs = 1;
    }
}
