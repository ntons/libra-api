syntax = "proto3";

package libra.v1;

option go_package = "github.com/ntons/libra-go/api/libra/v1";

import "libra/v1/chart.proto";

// 标准排行榜，按指定权重由大到小排列元素
service Leaderboard {
    // set entries
    rpc Set(LeaderboardSetRequest) returns(LeaderboardSetResponse);
    // set entry info by id
    rpc SetInfo(LeaderboardSetInfoRequest) returns(LeaderboardSetInfoResponse);
    // get entries by rank
    rpc GetByRank(LeaderboardSetRequest) returns(LeaderboardSetResponse);
    // get entries by id
    rpc GetById(LeaderboardGetByIdRequest) returns(LeaderboardGetByIdResponse);
    // random entries by score
    rpc GetByScore(LeaderboardGetByScoreRequest) returns(LeaderboardGetByScoreResponse);
    // remove entries by id
    rpc RemoveById(LeaderboardRemoveByIdRequest) returns(LeaderboardRemoveByIdResponse);
    // only update metadata of chart
    rpc Touch(LeaderboardTouchRequest) returns(LeaderboardTouchResponse);

    // deprecated, will be removed later
    rpc SetScore(LeaderboardSetScoreRequest) returns(LeaderboardSetScoreResponse);
    // deprecated, will be removed later
    rpc GetRange(LeaderboardGetRangeRequest) returns(LeaderboardGetRangeResponse);
}

message LeaderboardSetRequest {
    repeated ChartEntry entries = 1;
    bool only_add = 4;
    bool only_update = 5;
    bool incr_by = 6;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardSetResponse {
    repeated ChartEntry entries = 1;
}

message LeaderboardSetInfoRequest {
    repeated ChartEntry entries = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardSetInfoResponse {
}

message LeaderboardGetByRankRequest {
    int32 offset = 1;
    int32 count = 2;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardGetByRankResponse {
    repeated ChartEntry entries = 1;
}

message LeaderboardGetByIdRequest {
    repeated string ids = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardGetByIdResponse {
    repeated ChartEntry entries = 1;
}

message LeaderboardGetByScoreRequest {
    message Interval {
        int64 min = 1;
        int64 max = 2;
        uint32 count = 3;
    }
    repeated Interval intervals = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardGetByScoreResponse {
    repeated ChartEntry entries = 1;
}

message LeaderboardRemoveByIdRequest {
    repeated string ids = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardRemoveByIdResponse {
}

message LeaderboardTouchRequest {
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardTouchResponse {
}

// deprecated, will be removed later
message LeaderboardSetScoreRequest {
    repeated ChartEntry entries = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
// deprecated, will be removed later
message LeaderboardSetScoreResponse {
}

// deprecated, will be removed later
message LeaderboardGetRangeRequest {
    int32 offset = 1;
    int32 count = 2;
    ChartOptions options = 10;
    ChartKey key = 11;
}
// deprecated, will be removed later
message LeaderboardGetRangeResponse {
    repeated ChartEntry entries = 1;
}
