syntax = "proto3";

package libra.v1;

option go_package = "github.com/ntons/libra-go/api/libra/v1";

// chart key {app_id:name}[:suffix]
// 一般情况下，suffix不需要提供，redis集群会以{app_id:name}
// 的一致性哈希结果对请求进行路由。
// 但有一种情况需要考虑使用suffix，需要construct_from但时候，
// 需要保证被复制对象和新生成对象在同一台节点上，这时候就
// 需要suffix，实现内部会生成{app_id:name}:suffix这样的key，
// 括号内为redis的hash tag，只用hash tag来进行一致性哈希，
// 从而保证所有相关对象都在同一节点上。
message ChartKey {
    //string app_id   = 1;
    string name     = 2;
    string suffix   = 3;
}

// chart entry
message ChartEntry {
    int32   rank    = 1;
    string  id      = 2;
    string  info    = 3;
    int64   score   = 4;
}

// chart options
// NOTE:
//  if options not set, the existed chart keep it's current options
//  if field of options not set, the existed chart SET THIS OPTION TO DEFAULT
message ChartOptions {
    // maximal entries in the chart
    int32 capacity = 1;
    // duplicate from this name IF CHART NOT EXISTS
    // can only duplicate from chart which has the same name
    ChartKey construct_from = 2;
    // chart expire at timestamp
    int64 expire_at = 3;
    // chart expire after duration, if expire_at set, this option was ignored
    int64 expire = 4;
    // not trim tail if reach capacity, an OutOfRange error will be return
    bool no_trim = 5;
    // discard info in query results
    bool no_info = 6;
}

