syntax = "proto3";

package libra.v1;

option go_package = "github.com/ntons/libra-go/api/libra/v1";

import "google/protobuf/any.proto";

import "libra/v1/entry_key.proto";

// 邮件服务，异步通信体系
service Mailbox {
    rpc List(MailboxListRequest) returns(MailboxListResponse);
    //rpc Push(MailboxPushRequest) returns(MailboxPushResponse);
    rpc Pull(MailboxPullRequest) returns(MailboxPullResponse);
    // 支持批量收件人
    rpc Send(MailboxSendRequest) returns(MailboxSendResponse);
}

message Mail {
    string              id   = 1;
    google.protobuf.Any data = 2;
}

message Envelope {
    repeated EntryKey keys = 1;
    google.protobuf.Any data = 2;
    // maximum mails to keep, [1,65534]
    int32 capacity = 3;
    // using ring buffer to keep mails, order by (importance,pull order)
    bool overridable = 4;
    // mail importance [-128,127]
    int32 importance = 5;
}

message MailboxListRequest {
    message Options {
        // Polling in C# cause NotFound exception which lead to high latency
        bool regard_not_found_as_empty = 1;
    }
    EntryKey key = 1;
    // 获取邮件的数量, 0表示全部
    uint32 count = 2;
    Options options = 10;
}
message MailboxListResponse {
    repeated Mail mails = 1;
}

//message MailboxPushRequest {
//    Envelope envelope = 1;
//}
//message MailboxPushResponse {
//    string id = 1;
//}

message MailboxPullRequest {
    EntryKey key = 1;
    repeated string ids = 2;
}
message MailboxPullResponse {
    repeated string pulled_ids = 1; // pulled id list
}

message MailboxSendRequest {
    repeated Envelope envelopes = 1;
}
message MailboxSendResponse {
}
