syntax = "proto3";

package libra.v1;

option go_package = "github.com/ntons/libra-go/api/v1";

// 标准排行榜，按指定权重由大到小排列元素
service Leaderboard {
    // set entry score by id
    // set entry info if info field not empty
    rpc SetScore(LeaderboardSetScoreRequest) returns(LeaderboardSetScoreResponse);
    // incr entry score by id, if id not exists, add it with score
    // set entry info if info filed not empty
    rpc IncrScore(LeaderboardIncrScoreRequest) returns(LeaderboardIncrScoreResponse);
    // get entries by range
    rpc GetRange(LeaderboardGetRangeRequest) returns(LeaderboardGetRangeResponse);
    // get entries by id
    rpc GetById(LeaderboardGetByIdRequest) returns(LeaderboardGetByIdResponse);
    // remove entries by id
    rpc RemoveById(LeaderboardRemoveByIdRequest) returns(LeaderboardRemoveByIdResponse);
    // set entry info by id
    rpc SetInfo(LeaderboardSetInfoRequest) returns(LeaderboardSetInfoResponse);
}

// 冒泡排行榜，榜单元素以交换形式改变
service BubbleChart {
    // append entries to the end of chart
    rpc Append(BubbleChartAppendRequest) returns(BubbleChartAppendResponse);
    // swap 2 entries by id
    rpc SwapById(BubbleChartSwapByIdRequest) returns(BubbleChartSwapByIdResponse);
    // swap 2 entries by rank
    rpc SwapByRank(BubbleChartSwapByRankRequest) returns(BubbleChartSwapByRankResponse);
    // get entries by range
    rpc GetRange(BubbleChartGetRangeRequest) returns(BubbleChartGetRangeResponse);
    // get entries by id
    rpc GetById(BubbleChartGetByIdRequest) returns(BubbleChartGetByIdResponse);
    // remove entries by id
    rpc RemoveById(BubbleChartRemoveByIdRequest) returns(BubbleChartRemoveByIdResponse);
    // set entry info by id
    rpc SetInfo(BubbleChartSetInfoRequest) returns(BubbleChartSetInfoResponse);
}

// chart key {app_id:name}[:suffix]
// 一般情况下，suffix不需要提供，redis集群会以{app_id:name}
// 的一致性哈希结果对请求进行路由。
// 但有一种情况需要考虑使用suffix，需要construct_from但时候，
// 需要保证被复制对象和新生成对象在同一台节点上，这时候就
// 需要suffix，实现内部会生成{app_id:name}:suffix这样的key，
// 括号内为redis的hash tag，只用hash tag来进行一致性哈希，
// 从而保证所有相关对象都在同一节点上。
message ChartKey {
    string app_id   = 1;
    string name     = 2;
    string suffix   = 3;
}

// chart entry
message ChartEntry {
    int32   rank    = 1;
    string  id      = 2;
    string  info    = 3;
    int64   score   = 4;
}

// chart options
// NOTE:
//  if options not set, the existed chart keep it's current options
//  if field of options not set, the existed chart SET THIS OPTION TO DEFAULT
message ChartOptions {
    // maximal entries in the chart
    // default: 1000
    int32 capacity = 1;
    // duplicate from this name IF CHART NOT EXISTS
    // default: not duplicate
    string construct_from = 2;
    // chart expire at timestamp
    // default: no expire
    int64 expire_at = 3;
    // chart expire after duration, if expire_at set, this option was ignored
    // default: no expire
    int64 idle_expire = 4;
}

message LeaderboardSetScoreRequest {
    repeated ChartEntry entries = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardSetScoreResponse {
}

message LeaderboardIncrScoreRequest {
    repeated ChartEntry entries = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardIncrScoreResponse {
    repeated ChartEntry entries = 2;
}

message LeaderboardGetRangeRequest {
    int32 offset = 1;
    int32 count = 2;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardGetRangeResponse {
    repeated ChartEntry entries = 1;
}

message LeaderboardGetByIdRequest {
    repeated string ids = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardGetByIdResponse {
    repeated ChartEntry entries = 1;
}

message LeaderboardRemoveByIdRequest {
    repeated string ids = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardRemoveByIdResponse {
}

message LeaderboardSetInfoRequest {
    repeated ChartEntry entries = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message LeaderboardSetInfoResponse {
}

message BubbleChartAppendRequest {
    repeated ChartEntry entries = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message BubbleChartAppendResponse {
}

message BubbleChartSwapByIdRequest {
    string id0 = 1;
    string id1 = 2;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message BubbleChartSwapByIdResponse {
}

message BubbleChartSwapByRankRequest {
    int32 rank0 = 1;
    int32 rank1 = 2;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message BubbleChartSwapByRankResponse {
}

message BubbleChartGetRangeRequest {
    int32 offset = 1;
    int32 count = 2;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message BubbleChartGetRangeResponse {
    repeated ChartEntry entries = 1;
}

message BubbleChartGetByIdRequest {
    repeated string ids = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message BubbleChartGetByIdResponse {
    repeated ChartEntry entries = 1;
}

message BubbleChartRemoveByIdRequest {
    repeated string ids = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message BubbleChartRemoveByIdResponse {
}

message BubbleChartSetInfoRequest {
    repeated ChartEntry entries = 1;
    ChartOptions options = 10;
    ChartKey key = 11;
}
message BubbleChartSetInfoResponse {
}
