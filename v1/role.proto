syntax = "proto3";

package libra.v1;

option go_package = "github.com/ntons/libra-go/api/v1";

import "google/api/annotations.proto";

// Role代表User所创建的逻辑实例，Role和User为多对一关系
// id      为该角色的唯一标识，全局唯一
// index   为该角色在Role中的唯一序号，即(user_id, index)全局唯一
//         index主要为了防止异常情况下重试导致多次创建，
//         另外也可以作为分区分服的标识。
// user_id 该角色所属的用户

// All requests require passport `x-libra-token`
service Role {
    // list all roles belonging to user
    rpc List(RoleListRequest) returns(RoleListResponse) {
        option(google.api.http) = {
            post: "/v1/role/list"
            body: "*"
        };
    }

    // create a new role
    rpc Create(RoleCreateRequest) returns(RoleCreateResponse) {
        option(google.api.http) = {
            post: "/v1/role/create"
            body: "*"
        };
    }

    // set metadata to role
    rpc SetMetadata(RoleSetMetadataRequest) returns(RoleSetMetadataResponse) {
        option(google.api.http) = {
            post: "/v1/role/set-metadata"
            body: "*"
        };
    }

    // a `x-libra-ticket` used to identify a role will be replied via metadata/cookie
    rpc SignIn(RoleSignInRequest) returns(RoleSignInResponse) {
        option(google.api.http) = {
            post: "/v1/role/sign-in"
            body: "*"
        };
    }
}

message RoleData {
    string id = 1;
    uint32 index = 2;
    map<string, string> metadata = 15;
}

message RoleListRequest {
}
message RoleListResponse {
    repeated RoleData roles = 1;
}

message RoleCreateRequest {
    uint32 index = 1;
    map<string, string> metadata = 2;
}
message RoleCreateResponse {
    RoleData role = 1;
}

message RoleSetMetadataRequest {
    string role_id = 1;
    map<string, string> metadata = 2;
}
message RoleSetMetadataResponse {
}

message RoleSignInRequest {
    string role_id = 3;
}
message RoleSignInResponse {
}

