syntax = "proto3";

package libra.v1;

option go_package = "github.com/ntons/libra-go/api/v1";

import "google/protobuf/any.proto";

// Gateway网关服务是有状态的，需要metadata: x-libra-role-id 
service Gateway {
    ////////////////////////////////////////////////////////////////////////////
    // Methods access from client side
    ////////////////////////////////////////////////////////////////////////////
    // Establish the back pushing stream
    rpc Connect(GatewayConnectRequest) returns(stream google.protobuf.Any);

    ////////////////////////////////////////////////////////////////////////////
    // Methods access from server side
    ////////////////////////////////////////////////////////////////////////////
    // Send message to client
    rpc Send(GatewaySendRequest) returns(GatewaySendResponse);

    // Let a certain client to subscribe broadcast channels
    rpc Subscribe(GatewaySubscribeRequest) returns(GatewaySubscribeResponse);
    // let a certain client to unsubscribe broadcast channels
    rpc Unsubscribe(GatewayUnsubscribeRequest) returns(GatewayUnsubscribeResponse);

    // Broadcast to a channel
    rpc Broadcast(GatewayBroadcastRequest) returns(GatewayBroadcastResponse);
}

message GatewayConnectRequest {}

message GatewaySendRequest {
    google.protobuf.Any data = 10;
}
message GatewaySendResponse {}

message GatewaySubscribeRequest {
    repeated string keys = 1;
}
message GatewaySubscribeResponse {}

message GatewayUnsubscribeRequest {
    repeated string keys = 1;
}
message GatewayUnsubscribeResponse {}

message GatewayBroadcastRequest {
    string key = 1;
    google.protobuf.Any data = 2;
}
message GatewayBroadcastResponse {}

