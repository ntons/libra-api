syntax = "proto3";

package libra.v1;

option go_package = "github.com/ntons/libra-go/api/v1";

import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";

// 数据存取接口
// 这里的锁是个乐观锁，可以完全不用加锁任意访问数据
// 但是如果存在竞争条件(race condition)，使用者保证正确加锁
service Database {
    rpc RegisterSchema(DatabaseRegisterSchemaRequest) returns (DatabaseRegisterSchemaResponse) {}
    // lock/unlock
    rpc Lock   (DatabaseLockRequest) returns (DatabaseLockResponse);
    rpc Unlock (DatabaseUnlockRequest) returns (DatabaseUnlockResponse);
    // get/set data
    rpc Get (DatabaseGetRequest) returns (DatabaseGetResponse);
    rpc Set (DatabaseSetRequest) returns (DatabaseSetResponse);
}

message DatabaseRegisterSchemaRequest {
    // proto file descriptor set
    google.protobuf.FileDescriptorSet descriptor_set = 1;
    // proto message name
    string message_name = 2;
}
message DatabaseRegisterSchemaResponse {
    // unique identifier for registered proto
    string schema = 1;
}

message LockOptions {
}
message UnlockOptions {
    // 即使操作失败，依然释放锁
    bool even_on_failure = 1;
}

message DatabaseLockRequest {
    string app_id = 1;
    string collection = 2;
    string id = 3;
    LockOptions lock_options = 11;
}
message DatabaseLockResponse {
    // 获取到的互斥锁，你不需要知道这是个什么，在解锁时候传回来就行了
    google.protobuf.Any lock = 10;
}

message DatabaseUnlockRequest {
    google.protobuf.Any lock = 10;
    UnlockOptions unlock_options = 11;
}
message DatabaseUnlockResponse {
}

message DatabaseGetRequest {
    string app_id = 1;
    string collection = 2;
    string id = 3;
    google.protobuf.Any add_if_not_found = 9;
    // 如果设置lock_options会在获取数据之前尝试获取id对应的互斥锁
    // 如果上锁失败，数据将不会获取
    LockOptions lock_options = 11;
}
message DatabaseGetResponse {
    google.protobuf.Any data = 9;
    google.protobuf.Any lock = 10;
}

message DatabaseSetRequest {
    string app_id = 1;
    string collection = 2;
    string id = 3;
    google.protobuf.Any data = 9;
    // 获取到的互斥锁，更新数据前会校验锁是否有效，如果锁无效则不会更新数据
    // 如果不设置，数据则会被强制更新
    google.protobuf.Any lock = 10;
    // 如果设置unlock_options会在操作完成时解锁，要求lock字段有效
    UnlockOptions unlock_options = 11;
}
message DatabaseSetResponse {
}
